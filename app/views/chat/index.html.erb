<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6 lg:py-8">
    <!-- Header -->
    <div class="text-center mb-6 sm:mb-8 lg:mb-12">
      <div class="flex items-center justify-center space-x-2 mb-3 sm:mb-4">
        <div class="w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg flex items-center justify-center">
          <svg class="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
        </div>
        <h1 class="text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900">
          AI Image Generator Chatbot
        </h1>
      </div>
      <p class="text-sm sm:text-lg lg:text-xl text-gray-600 max-w-2xl mx-auto px-2 sm:px-4">
        Transform your ideas into stunning images with our AI-powered chatbot. 
        Simply describe what you want to see, and watch the magic happen!
      </p>
      <div class="mt-3 sm:mt-4">
        <%= link_to root_path, 
            class: "text-blue-600 hover:text-blue-800 font-medium transition-colors duration-200 text-sm sm:text-base" do %>
          <svg class="w-3 h-3 sm:w-4 sm:h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
          </svg>
          Back to Home
        <% end %>
      </div>
    </div>

    <!-- New Conversation Button -->
    <div class="text-center mb-4 sm:mb-6 lg:mb-8">
      <%= form_with url: new_conversation_path, method: :post, local: true do |form| %>
        <%= form.submit "Start New Conversation", 
            class: "bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-semibold py-2 sm:py-3 px-4 sm:px-6 lg:px-8 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 w-full sm:w-auto text-sm sm:text-base" %>
      <% end %>
    </div>

    <!-- Recent Conversations -->
    <div class="max-w-7xl mx-auto">
      <h2 class="text-lg sm:text-xl lg:text-2xl font-semibold text-gray-800 mb-3 sm:mb-4 lg:mb-6 px-2">Recent Conversations</h2>
      
      <% if @conversations.any? %>
        <div class="overflow-x-auto">
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            <% @conversations.each do |conversation| %>
              <div class="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 p-3 sm:p-4 lg:p-6 border border-gray-200">
                <div class="flex flex-col h-full">
                  <div class="flex-1 min-w-0">
                    <div class="flex items-center space-x-2 mb-1 sm:mb-2">
                      <h3 class="text-sm sm:text-base lg:text-lg font-medium text-gray-900 conversation-title truncate break-words" 
                          data-conversation-id="<%= conversation.id %>"
                          data-original-title="<%= conversation.title %>">
                        <%= conversation.title %>
                      </h3>
                      <button class="edit-title-btn text-blue-600 hover:text-blue-800 transition-colors duration-200 flex-shrink-0" 
                              data-conversation-id="<%= conversation.id %>">
                        <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                        </svg>
                      </button>
                    </div>
                    <% if conversation.last_message %>
                      <p class="text-gray-600 text-xs sm:text-sm truncate break-words pr-2 mb-2">
                        <%= conversation.last_message.content %>
                      </p>
                    <% end %>
                    <p class="text-gray-500 text-xs mt-1 sm:mt-2">
                      <%= time_ago_in_words(conversation.updated_at) %> ago
                    </p>
                  </div>
                  <div class="flex flex-wrap items-center gap-2 sm:space-x-2 flex-shrink-0 justify-center sm:justify-end mt-3">
                    <%= link_to chat_show_path(conversation), 
                        class: "bg-blue-100 hover:bg-blue-200 text-blue-700 font-medium py-1.5 sm:py-2 px-2 sm:px-3 rounded-lg transition-colors duration-200" do %>
                      <svg class="w-3 h-3 sm:w-4 sm:h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                      </svg>
                    <% end %>
                    <%= form_with url: delete_conversation_path(conversation), method: :delete, local: true, 
                        class: "inline", data: { confirm: 'Are you sure you want to delete this conversation?' } do |form| %>
                      <%= form.submit "", 
                          class: "bg-red-100 hover:bg-red-200 text-red-700 font-medium py-1.5 sm:py-2 px-2 sm:px-3 rounded-lg transition-colors duration-200 cursor-pointer",
                          style: "background-image: url('data:image/svg+xml;charset=UTF-8,%3csvg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"%3e%3cpath stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"%3e%3c/path%3e%3c/svg%3e'); background-repeat: no-repeat; background-position: center; background-size: 12px sm:16px;" %>
                    <% end %>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      <% else %>
        <div class="text-center py-8 sm:py-12">
          <div class="w-16 h-16 sm:w-20 sm:h-20 lg:w-24 lg:h-24 mx-auto mb-3 sm:mb-4 bg-gray-200 rounded-full flex items-center justify-center">
            <svg class="w-8 h-8 sm:w-10 sm:h-10 lg:w-12 lg:h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
            </svg>
          </div>
          <h3 class="text-base sm:text-lg font-medium text-gray-900 mb-1 sm:mb-2">No conversations yet</h3>
          <p class="text-gray-600 text-xs sm:text-sm lg:text-base">Start your first conversation to begin generating amazing images!</p>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
// Edit title functionality - improved version
function initializeEditTitle() {
  document.querySelectorAll('.edit-title-btn').forEach(button => {
    // Remove existing event listeners to prevent duplicates
    button.removeEventListener('click', handleEditClick);
    button.addEventListener('click', handleEditClick);
  });
}

function handleEditClick(e) {
  e.preventDefault();
  e.stopPropagation();
  
  const conversationId = this.dataset.conversationId;
  const titleElement = document.querySelector(`[data-conversation-id="${conversationId}"].conversation-title`);
  const originalTitle = titleElement.dataset.originalTitle;
  
  // Create input field
  const input = document.createElement('input');
  input.type = 'text';
  input.value = originalTitle;
  input.className = 'text-sm sm:text-base lg:text-lg font-medium text-gray-900 border border-blue-300 rounded px-2 py-1 focus:outline-none focus:ring-2 focus:ring-blue-500 w-full';
  
  // Replace title with input
  titleElement.style.display = 'none';
  titleElement.parentNode.insertBefore(input, titleElement);
  input.focus();
  input.select();
  
  // Handle save on enter or blur
  const saveTitle = () => {
    const newTitle = input.value.trim();
    if (newTitle && newTitle !== originalTitle) {
      fetch(`/chat/${conversationId}/update`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({ title: newTitle })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          titleElement.textContent = data.title;
          titleElement.dataset.originalTitle = data.title;
        }
      })
      .catch(error => {
        console.error('Error updating title:', error);
      });
    }
    titleElement.style.display = 'block';
    input.remove();
  };
  
  input.addEventListener('blur', saveTitle);
  input.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      saveTitle();
    }
  });
  
  // Handle escape key
  input.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      titleElement.style.display = 'block';
      input.remove();
    }
  });
}

// Initialize on DOM load
document.addEventListener('DOMContentLoaded', initializeEditTitle);

// Re-initialize after Turbo navigation (for Rails Turbo)
document.addEventListener('turbo:load', initializeEditTitle);
document.addEventListener('turbo:render', initializeEditTitle);
</script>
